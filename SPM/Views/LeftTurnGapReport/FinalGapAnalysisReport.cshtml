@model IEnumerable<SPM.Models.FinalGapAnalysisReportViewModel>
<link href="@Server.MapPath("~/Content/bootstrap.min.css")" rel="stylesheet" />

<style>
    th, td {
        font-size: 13.4px;
    }

    .recommendation {
        color: #bc6c39;
    }

    th {
        font-weight: normal;
    }

    td {
        font-weight: bold;
    }

    .dark-blue {
        color: #2f5597;
    }

    .grey {
        background-color: #e8e8e8;
    }

    table, .keep-together {
        page-break-inside: avoid;
    }
</style>

<table class="table table-borderless border-bottom border-primary @(Model.First().Is24HourReport ? "text-center" : "text-left")">
    <tr>
        <th class="float-left"><img src="C:\projects\avenue\ATSPM\SPM\Images\NewUDOTLogo.png" width="200" /></th>
        <th><h3>Left Turn Phase</h3><h3>Analysis Report</h3></th>
        <th class="text-right">
            <p>@DateTime.Now.ToString("D")</p>
            <p>@DateTime.Now.ToString("t")</p>
        </th>
    </tr>
</table>

<h4 class="p-3">Signal ID: &nbsp; <b> @Model.First().SignalId &emsp; @Model.First().Location </b> </h4>

@{int i = 0;}
@foreach (var result in Model)
{
<div class="keep-together border border-bottom-0" style="border-color: #2f5597">
    @if (i++ % 2 == 0)
    {
        <table class="table table-borderless text-left grey mb-0">
            <tr>
                <th>
                    Left Turn Approach:
                </th>
                <td>
                    @result.ApproachDescription.Split(' ')[0]
                </td>
                <th>
                    Phase Type:
                </th>
                <td>
                    @result.PhaseType
                </td>
                <th>
                    Signal Type:
                </th>
                <td>
                    @result.SignalType
                </td>
                @if (result.Is24HourReport)
                {
                    <th>
                        Speed Limit:
                    </th>
                    <td>
                        @result.SpeedLimit
                    </td>
                }
            </tr>
            <tr>
                <th>
                    Opposing Approach:
                </th>
                <td>
                    ???
                </td>
                <th>
                    Number of Thru Lanes:
                </th>
                <td>
                    ???
                </td>
                @if (result.Is24HourReport)
                {
                    <th>
                        Start Date:
                    </th>
                    <td>
                        @result.StartDate.ToShortDateString()
                    </td>
                    <th>
                        End Date:
                    </th>
                    <td>
                        @result.EndDate.ToShortDateString()
                    </td>
                }
                else
                {
                    <th>
                        Speed Limit:
                    </th>
                    <td>
                        @result.SpeedLimit
                    </td>
                }
        </table>
    }

    @if (result.Is24HourReport)
    {
        <style>
            th, td {
                font-size: 20px;
            }
        </style>

        <img src="@result.GapDemandChartImg" />
        <br />
        <table class="table table-borderless border-bottom border-secondary">
            <tr>
                <td colspan="8" />
            </tr>
        </table>
        <img src="@result.PedSplitFailChartImg" />
    }
    else
    {
        if (result.GapDurationConsiderForStudy.HasValue)
        {
            <table class="table table-borderless" style="background-color: #2f5597; color: white">
                <tr>
                    <th>
                        Peak Period:
                    </th>
                    <td>
                        @DateTime.Today.Add(result.StartTime).ToString("tt")
                    </td>
                    <th>
                        Start:
                    </th>
                    <td>
                        @DateTime.Today.Add(result.StartTime).ToString("hh:mm tt")
                    </td>
                    <th>
                        End:
                    </th>
                    <td>
                        @DateTime.Today.Add(result.EndTime).ToString("hh:mm tt")
                    </td>
                    <th>
                        Start Date:
                    </th>
                    <td>
                        @result.StartDate.ToShortDateString()
                    </td>
                    <th>
                        End Date:
                    </th>
                    <td>
                        @result.EndDate.ToShortDateString()
                    </td>
                </tr>
            </table>

            <table class="table table-borderless text-left">
                <tr>
                    <th colspan="8" class="dark-blue text-center" style="font-weight: bolder">
                        Left Turn Gap Analysis Results
                    </th>
                </tr>
                <tr>
                    <th>
                        Capacity:
                    </th>
                    <td>
                        @result.Capacity.ToString("N")
                    </td>
                    <th>
                        Demand:
                    </th>
                    <td>
                        @result.Demand.ToString("N")
                    </td>
                    <th>
                        V/C Ratio:
                    </th>
                    <td>
                        @((result.Demand / result.Capacity).ToString("N"))
                    </td>
                    @if (result.PhaseType == "Protected Only")
                    {
                        <th>
                            Phase:
                        </th>
                        <td>
                            Protected Only
                        </td>
                    }
                </tr>
                <tr>
                    <td colspan="8" class="recommendation text-center">
                        @if (result.GapDurationConsiderForStudy.HasValue)
                        {
                            <label class="text-success">Consider for Study</label>
                        }
                        else
                        {
                            <label class="text-danger">Don't Consider for Study</label>
                        }
                    </td>
                </tr>
            </table>

            <table class="table table-borderless grey text-left mb-0">
                <tr>
                    <th colspan="8" class="dark-blue text-center" style="font-weight: bolder">
                        Alternative Measures Analysis Results
                    </th>
                </tr>
                <tr>
                    <th colspan="3" class="text-center" style="font-weight: bolder">
                        Split Failure and Pedestrains
                    </th>
                    <th colspan="5" class="text-center" style="font-weight: bolder">
                        Volume Cross Product and Boundries
                    </th>
                </tr>
                <tr>
                    <th>
                        Cycles With Split Failure:
                    </th>
                    <td colspan="2">
                        @result.CyclesWithSplitFailNum | @result.CyclesWithSplitFailPercent
                    </td>
                    <th class="text-left">
                        Left Turn Movement Volume:
                    </th>
                    <td>
                        @result.LeftTurnVolume
                    </td>
                </tr>
                <tr>
                    <td colspan="3" class="recommendation text-center">
                        @if (result.SplitFailsConsiderForStudy.HasValue)
                        {
                            if (result.SplitFailsConsiderForStudy.HasValue)
                            {
                                <label class="text-success">Consider for Study</label>
                            }
                            else
                            {
                                <label class="text-danger">Don't Consider for Study</label>
                            }
                        }
                        else
                        {
                            @("Not Analyzed")
                        }
                    </td>
                    <th class="text-left">
                        Opposing Through Movement Volume:
                    </th>
                    <td>
                        @result.OpposingThroughVolume
                    </td>
                </tr>
                <tr>
                    <th>
                        Cycles With Pedestrain Calls:
                    </th>
                    <td colspan="2">
                        @result.CyclesWithPedCallNum
                    </td>
                    <th class="text-left">
                        Cross Product Value:
                    </th>
                    <td>
                        @result.CrossProductValue.ToString("N0")
                    </td>
                    <td colspan="3" class="recommendation">
                        @if (result.CrossProductReview)
                        {
                            if (result.CrossProductReview)
                            {
                                <label class="text-success">Consider for Study</label>
                            }
                            else
                            {
                                <label class="text-danger">Don't Consider for Study</label>
                            }
                        }
                        else
                        {
                            @("Not Analyzed")
                        }
                    </td>
                </tr>
                <tr>
                    <td colspan="3" class="recommendation text-center">
                        @if (result.PedActuationsConsiderForStudy.HasValue)
                        {
                            if (result.PedActuationsConsiderForStudy.HasValue)
                            {
                                <label class="text-success">Ped Analysis Recommended</label>
                            }
                            else
                            {
                                <label class="text-danger"> Ped Analysis not Recommended</label>
                            }
                        }
                        else
                        {
                            @("Not Analyzed")
                        }
                    </td>
                    <th class="text-left">
                        Calculated Volume Boundry:
                    </th>
                    <td>
                        @result.CalculatedVolumeBoundary.ToString("N")
                    </td>
                    <td colspan="3" class="recommendation">
                        @if (result.VolumesConsiderForStudy.HasValue)
                        {
                            if (result.VolumesConsiderForStudy.HasValue)
                            {
                                <label class="text-success">Consider for Study</label>
                            }
                            else
                            {
                                <label class="text-danger">Don't Consider for Study'</label>
                            }
                        }
                        else
                        {
                            @("Not Analyzed")
                        }
                    </td>
                </tr>
                <tr>
                    <td></td>
                </tr>
            </table>
        }

        if (result.SplitFailsConsiderForStudy.HasValue)
        {
            <br />
            <table class="table table-bordered table text-center">
                <tr>
                    <td colspan="3" class="recommendation text-center grey">
                        @if (result.SplitFailsConsiderForStudy.Value)
                        {
                            <label class="text-success">Split Fails: Consider for Study</label>
                            <br />
                        }
                        else
                        {
                            <label class="text-danger">Split Fails: Do not Consider for Study</label>
                            <br />
                        }
                    </td>
                </tr>
                <tr>
                    <th>
                        Cycles with Split Fails
                    </th>
                    <th>
                        Percent Cycles with Split Fails
                    </th>
                </tr>
                <tr>
                    <td>
                        @result.CyclesWithSplitFailNum
                    </td>
                    <td>
                        @result.CyclesWithSplitFailPercent
                    </td>
                </tr>
            </table>
        }

        if (result.PedActuationsConsiderForStudy.HasValue)
        {
            <table class="table table-bordered table text-center">
                <tr>
                    <td colspan="2" class="recommendation text-center grey">
                        @if (result.PedActuationsConsiderForStudy.Value)
                        {
                            <label class="text-success">Ped Actuations: Consider for Study</label>
                            <br />
                        }
                        else
                        {
                            <label class="text-danger">Ped Actuations: Do not Consider for Study</label>
                            <br />
                        }
                    </td>
                </tr>
                <tr>
                    <th>
                        Cycles with Pedestrian Calls
                    </th>
                    <th>
                        Percent Cycles with Pedestrian Calls
                    </th>
                </tr>
                <tr>
                    <td>
                        @result.CyclesWithPedCallNum
                    </td>
                    <td>
                        @result.CyclesWithPedCallPercent
                    </td>
                </tr>
            </table>
            <img src="@result.PedSplitFailChartImg" />
        }

        if (result.VolumesConsiderForStudy.HasValue)
        {
            <table class="table table-bordered table text-center">
                <tr>
                    <td colspan="7" class="recommendation text-center grey">
                        @if (result.VolumesConsiderForStudy.Value)
                        {
                            <label class="text-success">Volumes: Consider for Study</label>
                            <br />
                        }
                        else
                        {
                            <label class="text-danger">Volumes: Do not Consider for Study</label>
                            <br />
                        }
                    </td>
                </tr>
                <tr>
                    <th>
                        Opposing Lanes
                    </th>
                    <th>
                        Cross Product Review
                    </th>
                    <th>
                        Decision Boundaries Review
                    </th>
                    <th>
                        Left Turn Volume
                    </th>
                    <th>
                        Opposing Through Volume
                    </th>
                    <th>
                        Cross Poduct Value
                    </th>
                    <th>
                        Calculated Volume Boundary
                    </th>
                </tr>
                <tr>
                    <td>
                        @result.OpposingLanes
                    </td>
                    <td>
                        @result.CrossProductReview
                    </td>
                    <td>
                        @result.DecisionBoundariesReview
                    </td>
                    <td>
                        @result.LeftTurnVolume
                    </td>
                    <td>
                        @result.OpposingThroughVolume
                    </td>
                    <td>
                        @result.CrossProductValue.ToString("N0")
                    </td>
                    <td>
                        @result.CalculatedVolumeBoundary.ToString("N")
                    </td>
                </tr>
            </table>
        }
    }
</div>
}