@model IEnumerable<SPM.Models.FinalGapAnalysisReportViewModel>
<link href="C:\projects\avenue\ATSPM\SPM\Content\bootstrap.min.css" rel="stylesheet">
<style>
    th {
        font-size: 14.5px
    }

    .recommendation {
        color: #bc6c39
    }

    .dark-blue {
        color: #2f5597
    }
</style>
<table class="table table-borderless border-bottom border-primary">
    <tr>
        <th class="float-left"><img src="C:\projects\avenue\ATSPM\SPM\Images\NewUDOTLogo.png" width="200" /></th>
        <th class="text-left"><h3>Left Turn Phase</h3><h3>Analysis Report</h3></th>
        <th class="text-right" style="font-weight: normal">
            <p>@DateTime.Now.ToString("D")</p>
            <p>@DateTime.Now.ToString("t")</p>
        </th>
    </tr>
</table>

<h4 class="p-3">Signal ID: &nbsp; <b> @Model.First().SignalId &emsp; @Model.First().Location </b> </h4>
<table class="table table-borderless" style="background-color: #e8e8e8">
    <tr>
        <th style="font-weight: normal">
            Left Turn Approach:
        </th>
        <th>
            @Model.First().ApproachDescription.Split(' ')[0]
        </th>
        <th style="font-weight: normal">
            Phase Type:
        </th>
        <th>
            @Model.First().PhaseType
        </th>
        <th style="font-weight: normal">
            Signal Type:
        </th>
        <th>
            ???
        </th>
        <th style="font-weight: normal">
            Speed Limit:
        </th>
        <th>
            @Model.First().SpeedLimit
        </th>
    </tr>
    <tr>
        <th style="font-weight: normal">
            Opposing Approach:
        </th>
        <th>
            ???
        </th>
        <th style="font-weight: normal">
            Number of Thru Lanes:
        </th>
        <th>
            ???
        </th>
        <th style="font-weight: normal">
            Start Date:
        </th>
        <th>
            @Model.First().StartDate.ToShortDateString()
        <th style="font-weight: normal">
            End Date:
        </th>
        <th>
            @Model.First().EndDate.ToShortDateString()
        </th>
    </tr>
</table>
@foreach (var result in Model)
{
    if (result.Is24HourReport)
    {
        <img src="@result.GapDemandChartImg" />
        <img src="@result.PedSplitFailChartImg" />
    }
    else

    {
        if (result.GapDurationConsiderForStudy.HasValue)
        {
            <br />
            <table class="table table-borderless" style="background-color:#2f5597; color:white">
                <tr>
                    <th style="font-weight: normal">
                        Peak Period:
                    </th>
                    <th>
                        @DateTime.Today.Add(result.StartTime).ToString("tt")
                    </th>
                    <th style="font-weight: normal">
                        Start:
                    </th>
                    <th>
                        @DateTime.Today.Add(result.StartTime).ToString("hh:mm tt")
                    </th>
                    <th style="font-weight: normal">
                        End:
                    </th>
                    <th>
                        @DateTime.Today.Add(result.EndTime).ToString("hh:mm tt")
                    </th>
                    <th style="font-weight: normal">
                        Start Date:
                    </th>
                    <th>
                        @result.StartDate.ToShortDateString()
                    </th>
                    <th style="font-weight: normal">
                        End Date:
                    </th>
                    <th>
                        @result.EndDate.ToShortDateString()
                    </th>
                </tr>
            </table>
            <table class="table table-borderless">
                <tr>
                    <th colspan="8" class="dark-blue">
                        Left Turn Gap Analysis Results
                    </th>
                </tr>
                <tr>
                    <th style="font-weight: normal">
                        Capacity:
                    </th>
                    <th>
                        @result.Capacity
                    </th>
                    <th style="font-weight: normal">
                        Demand:
                    </th>
                    <th>
                        @result.Demand
                    </th>
                    <th style="font-weight: normal">
                        V/C Ratio:
                    </th>
                    <th>
                        @(result.Demand == 0 && result.Capacity == 0 ? 0 : result.Demand / result.Capacity)
                    </th>
                    @if (result.PhaseType == "Protected Only")
                    {
                        <th style="font-weight: normal">
                            Phase:
                        </th>
                        <th>
                            Protected Only
                        </th>
                    }
                </tr>
                <tr>
                    <th colspan="8" class="recommendation">
                        @(result.ConsiderForStudy ? "Consider For Study" : "Don't Consider For Study")
                    </th>
                </tr>
            </table>
            <table class="table table-borderless" style="background-color: #e8e8e8">
                <tr>
                    <th colspan="8" class="dark-blue">
                        Alternative Measures Analysis Results
                    </th>
                </tr>
                <tr>
                    <th colspan="3" class="text-center">
                        Split Failure and Pedestrains
                    </th>
                    <th colspan="5" class="text-center">
                        Volume Cross Product and Boundries
                    </th>
                </tr>
                <tr>
                    <th style="font-weight: normal">
                        Cycles With Split Failure:
                    </th>
                    <th colspan="2">
                        @result.CyclesWithSplitFailNum | @result.CyclesWithSplitFailPercent
                    </th>
                    <th class="text-left" style="font-weight: normal">
                        Left Turn Movement Volume:
                    </th>
                    <th>
                        @result.LeftTurnVolume
                    </th>
                </tr>
                <tr>
                    <th colspan="3" class="recommendation">
                        @if (result.SplitFailsConsiderForStudy.HasValue)
                        {
                            @(result.SplitFailsConsiderForStudy.Value ? "Consider" : "Not Considered")
                        }
                        else
                        {
                            @("Not Analyzed")
                        }
                    </th>
                    <th class="text-left" style="font-weight: normal">
                        Opposing Through Movement Volume:
                    </th>
                    <th>
                        @result.OpposingThroughVolume
                    </th>
                </tr>
                <tr>
                    <th style="font-weight: normal">
                        Cycles With Pedestrain Calls:
                    </th>
                    <th colspan="2">
                        @result.CyclesWithPedCallNum
                    </th>
                    <th class="text-left" style="font-weight: normal">
                        Cross Product Value:
                    </th>
                    <th>
                        @result.CrossProductValue
                    </th>
                    <th colspan="3" class="recommendation">
                        ???
                    </th>
                </tr>
                <tr>
                    <th colspan="3" class="recommendation">
                        @if (result.PedActuationsConsiderForStudy.HasValue)
                        {
                            @(result.PedActuationsConsiderForStudy.Value ? "Ped Analysis Recommended" : "Ped Analysis not Recommended")
                        }
                        else
                        {
                            @("Not Analyzed")
                        }
                    </th>
                    <th class="text-left" style="font-weight: normal">
                        Calculated Volume Boundry:
                    </th>
                    <th>
                        @result.CalculatedVolumeBoundary
                    </th>
                    <th colspan="3" class="recommendation">
                        @if (result.VolumesConsiderForStudy.HasValue)
                        {
                            @(result.VolumesConsiderForStudy.Value ? "Consider" : "Not Considered")
                        }
                        else
                        {
                            @("Not Analyzed")
                        }
                    </th>
                </tr>
            </table>
        }
        if (result.SplitFailsConsiderForStudy.HasValue)
        {
            <table class="table table-bordered table">
                <tr>
                    <th colspan="3">
                        @if (result.SplitFailsConsiderForStudy.Value)
                        {
                            <label class="alert-success">Split Fails: Consider for Study</label>
                            <br />
                        }
                        else
                        {
                            <label class="alert-danger">Split Fails: Do not Consider for Study</label>
                            <br />
                        }
                    </th>
                </tr>
                <tr>
                    <th>
                        Cycles with Split Fails
                    </th>
                    <th>
                        Percent Cycles with Split Fails
                    </th>
                </tr>
                <tr>
                    <td>
                        @result.CyclesWithSplitFailNum
                    </td>
                    <td>
                        @result.CyclesWithSplitFailPercent
                    </td>
                </tr>
            </table>
            @*<table class="table table-bordered table">
                    <tr>
                        <th>Date/Time</th>
                        <th>Value</th>
                    </tr>
                    @foreach (var item in result.PercentCyclesWithSplitFailList)
                    {
                        <tr>
                            <td>@item.Key</td>
                            <td>@item.Value</td>
                        </tr>
                    }
                </table>*@
        }
        if (result.PedActuationsConsiderForStudy.HasValue)
        {
            <table class="table table-bordered table">
                <tr>
                    <th colspan="2">
                        @if (result.PedActuationsConsiderForStudy.Value)
                        {
                            <label class="alert-success">Ped Actuations: Consider for Study</label>
                            <br />
                        }
                        else
                        {
                            <label class="alert-danger">Ped Actuations: Do not Consider for Study</label>
                            <br />
                        }
                    </th>
                </tr>
                <tr>
                    <th>
                        Cycles with Pedestrian Calls
                    </th>
                    <th>
                        Percent Cycles with Pedestrian Calls
                    </th>
                </tr>
                <tr>
                    <td>
                        @result.CyclesWithPedCallNum
                    </td>
                    <td>
                        @result.CyclesWithPedCallPercent
                    </td>
                </tr>
            </table>
            <img src="@result.PedSplitFailChartImg" />
        }
        if (result.VolumesConsiderForStudy.HasValue)
        {
            <table class="table table-bordered table">
                <tr>
                    <th colspan="7">
                        @if (result.VolumesConsiderForStudy.Value)
                        {
                            <label class="alert-success">Volumes: Consider for Study</label>
                            <br />
                        }
                        else
                        {
                            <label class="alert-danger">Volumes: Do not Consider for Study</label>
                            <br />
                        }
                    </th>
                </tr>
                <tr>
                    <th>
                        Opposing Lanes
                    </th>
                    <th>
                        Cross Product Review
                    </th>
                    <th>
                        Decision Boundaries Review
                    </th>
                    <th>
                        Left Turn Volume
                    </th>
                    <th>
                        Opposing Through Volume
                    </th>
                    <th>
                        Cross Poduct Value
                    </th>
                    <th>
                        Calculated Volume Boundary
                    </th>
                </tr>
                <tr>
                    <td>
                        @result.OpposingLanes
                    </td>
                    <td>
                        @result.CrossProductReview
                    </td>
                    <td>
                        @result.DecisionBoundariesReview
                    </td>
                    <td>
                        @result.LeftTurnVolume
                    </td>
                    <td>
                        @result.OpposingThroughVolume
                    </td>
                    <td>
                        @result.CrossProductValue
                    </td>
                    <td>
                        @result.CalculatedVolumeBoundary
                    </td>
                </tr>
            </table>

        }
    }
}
